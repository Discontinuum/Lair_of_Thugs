#textdomain wesnoth-vs


#define REDRAW WML
    [redraw]
        {WML}
    [/redraw] 
#enddef

#define DELAY TIME 
    [delay]
        time={TIME}
    [/delay] 
#enddef

#define TERR_MASK_IN_EVENT NAME X Y
    [terrain_mask]
        x={X}
        y={Y}
        mask={NAME}
    [/terrain_mask]
    [redraw]
    [/redraw]
#enddef

#define TERR_MASK NAME X Y
    [event]
        name=prestart
        {TERR_MASK_IN_EVENT {NAME} {X} {Y}}
    [/event]
#enddef

#define SOUND_LIST:FROZEN_WIND 
frozen-wind-[1~3].wav
#enddef

#define WOSE_GUARDIAN SIDE X Y TERRAIN_PLACE TERRAIN_MOVE

    [event]
    name=prestart 

        [unit]
            type=Wose 
            side={SIDE}
            x,y={X},{Y}
            id=Wose{X}_{Y}
        [/unit]

        [micro_ai]
            side={SIDE}
            ai_type=return_guardian
            action=add

            [filter]
                id=Wose{X}_{Y}
            [/filter]
            return_x,return_y={X},{Y}
        [/micro_ai]

        [terrain]
            x,y={X},{Y}
            terrain={TERRAIN_PLACE}
        [/terrain]
    [/event]

    [event]
    name=side {SIDE} turn end 
    first_time_only=no 

        [if]
            [have_unit]
                id=Wose{X}_{Y}
                x,y={X},{Y} 
            [/have_unit]
            [and]
                [not]
                    [have_unit]
                        [filter_side]
                            [enemy_of]
                                side={SIDE}
                            [/enemy_of]
                        [/filter_side]
                        x,y={X},{Y}
                        radius=1 
                    [/have_unit]
                [/not]
            [/and]
            [then]
                {MODIFY_TERRAIN {TERRAIN_PLACE} {X} {Y}}
            [/then]
        [/if]
    [/event]
    [event]
        name=moveto 
        first_time_only=yes 

            [filter]
                id=Wose{X}_{Y}
            [/filter]

            [sound]
                name=wose-die.ogg 
            [/sound]

            {MODIFY_TERRAIN {TERRAIN_MOVE} {X} {Y}}

            [redraw][/redraw]
    [/event]

#enddef 

#define RETURN_GUARDIAN SIDE TYPE X Y 

    [event]
    name=prestart 

        [unit]
            type={TYPE} 
            side={SIDE}
            x,y={X},{Y}
            id=RGuard{X}_{Y}
        [/unit]

        [micro_ai]
            side={SIDE}
            ai_type=return_guardian
            action=add

            [filter]
                id=RGuard{X}_{Y}
            [/filter]
            return_x,return_y={X},{Y}
        [/micro_ai]
    [/event]
#enddef 

    #define CHECK_LIGHT TIME

        [store_locations]
            terrain=*^Ecf,*^Ebn
            variable=campfires
        [/store_locations]

        [foreach]
            array=campfires
            index_var=i
            [do] 
                [time_area]
                    {TIME}
                    id=campfire_|$this_item.x|_|$this_item.y|
                    x=$this_item.x
                    y=$this_item.y
                [/time_area]     
                [sound_source]
                    id=campfire_|$this_item.x|_|$this_item.y|
                    loop=-1
                    x,y=$this_item.x,$this_item.y
                    sounds=ambient/campfire.ogg
                    full_range=5
                    fade_range=5
                [/sound_source]        
            [/do]
        [/foreach]
    #enddef

    #define ENEMY_CASE VALUE COUNT ENEMY_TYPES SIDE

    [case]
        value={VALUE}

            [repeat]
                times={COUNT}
                [do]
                    {RANDOM "0..$($random_placement_locations.length - 1)"}
                    {VARIABLE random_placement_x $random_placement_locations[$random].x}
                    {VARIABLE random_placement_y $random_placement_locations[$random].y}

                    {VARIABLE_OP enemies_unit_type rand {ENEMY_TYPES}}

                    [unit]
                        side={SIDE}
                        type=$enemies_unit_type
                        x=$random_placement_x
                        y=$random_placement_y
                        animate=yes
                    [/unit]
                [/do]
            [/repeat]
    [/case]

    #enddef

    #define BOSS_CASE VALUE SIDE TYPE NAME RECRUITS MINIONS_NUMBER 

    [case]
        value={VALUE}

        [if]
            [variable]
                name={VALUE}_spawned
                equals=yes 
            [/variable]
        [then]
        [/then]

        [else]

            {VARIABLE {VALUE}_spawned yes}

            {RANDOM "0..$($random_placement_locations.length - 1)"}
            {VARIABLE random_placement_x $random_placement_locations[$random].x}
            {VARIABLE random_placement_y $random_placement_locations[$random].y}

                [unit]
                    side={SIDE}
                    type={TYPE}
                    name={NAME}
                    canrecruit=yes
                    extra_recruit={RECRUITS}
                    id={VALUE}
                    x=$random_placement_x
                    y=$random_placement_y
                    animate=yes
                [/unit]

                {SCATTER_UNITS {MINIONS_NUMBER} ({RECRUITS}) 0 (
                    [filter_adjacent_location]
                        [filter]
                            id={VALUE}
                        [/filter]
                    [/filter_adjacent_location]
                    [not]
                        [filter]
                        [/filter]
                    [/not]
                    ) (
                        side={SIDE}
                        generate_name=yes
                        random_traits=yes
                        role={VALUE}_minion
                )}

                [modify_side]
                    side={SIDE}
                    hidden=no 
                    {GOLD 50 100 150}
                [/modify_side]
        [/else]
        [/if]
    [/case]

    #enddef

    #define SPAWN_FILTER
        side=1,2
            [not]
                x=16-23
                y=1-70
            [/not]
            [and]
                [not]
                    x=recall 
                    y=recall
                [/not]
            [/and]
            [and]
                [not]
                    x=$old_spawn_x 
                    y=$old_spawn_y
                    radius=5
                [/not]
            [/and]
    #enddef 

    #define SPAWN_RATE_TIMER TIME RATE
        [event]
        name=new_turn 
        id=spawn_timer{TIME}_{RATE}
        first_time_only=no 

            {VARIABLE_OP timer add 1}

            [if]
                [variable]
                    name=timer 
                    numerical_equals={TIME} 
                [/variable]
            [then]
                {VARIABLE_OP spawn_rate set {RATE}}
                {VARIABLE_OP timer set 0}

                [remove_event]
                    id=spawn_timer{TIME}_{RATE}
                [/remove_event]
            [/then]
            [/if]
        [/event]
    #enddef

    [event]
    name=prestart 

        {VARIABLE spawn_rate 5}
    [/event]

    [event]
    name=new_turn
    id=spawn_timer
    first_time_only=no 

        [message]
            speaker=Naga1 
            message=_ "$spawn_rate|"
        [/message]

        [if]
            [variable]
                name=turn_number
                greater_than_equal_to="($spawn_turn + 3)"
            [/variable]
        [then]
            {VARIABLE_OP spawn_rate add 3}
        [/then]
        [/if]
    [/event]

    [event]
    name=new_turn 
    first_time_only=no 

        [if]
            [have_unit]
                {SPAWN_FILTER}
            [/have_unit]
        [then]

            {VARIABLE_OP enemies rand 1..10}

            [if]

                [variable]
                    name=enemies
                    less_than=$spawn_rate
                [/variable]

            [then]

            {VARIABLE spawn_turn $turn_number}
            {SPAWN_RATE_TIMER 3 5}

            [store_unit]
                [filter]
                     {SPAWN_FILTER}
                [/filter]
                kill=no 
                variable=target 
            [/store_unit]

            {VARIABLE target_random_limit $target.length}
            {VARIABLE_OP target_random_limit sub 1}
            {RANDOM 0..$target_random_limit}

            [message]
                speaker=Naga1 
                message=_ "$|target[$random].x|,$|target[$random].y|"
            [/message]

            [store_locations]
                x,y=$target[$random].x,$target[$random].y
                radius=5
                variable=random_placement_locations
            [/store_locations]

            {VARIABLE old_spawn_x $target[$random].x}
            {VARIABLE old_spawn_y $target[$random].y}

            {VARIABLE_OP enemies_type rand animals,scorpions,undead_ghost,undead_skeletal,undead_ghouls,ogres,mudcrawlers,crabs,boss_roc,boss_ogre,boss_deathknight,boss_mud}

            [switch]
                variable=enemies_type 

                {ENEMY_CASE scorpions {ON_DIFFICULTY 4 5 6} ("Giant Scorpion","Giant Scorpling","Sand Scuttler","Sand Scamperer","Rock Scorpion") 4}
                {ENEMY_CASE mudcrawlers {ON_DIFFICULTY 5 6 7} ("Small Mudcrawler","Giant Mudcrawler","Mudcrawler") 4}
                {ENEMY_CASE crabs {ON_DIFFICULTY 5 6 7} ("Monster Crab") 4}
                {ENEMY_CASE animals {ON_DIFFICULTY 4 5 6} ("Tauroch,Quenoth Dustbok") 4}

                {ENEMY_CASE ogres {ON_DIFFICULTY 4 5 6} ("Young Ogre","Ogre") 5} 

                {ENEMY_CASE undead_skeletal {ON_DIFFICULTY 4 5 6} ("Skeleton","Skeleton Archer","Bone Shooter","Revenant","Deathblade","Skeleton Rider") 6} 
                {ENEMY_CASE undead_ghost {ON_DIFFICULTY 4 5 6} ("Ghost","Shadow","Wraith") 6} 
                {ENEMY_CASE undead_ghouls {ON_DIFFICULTY 4 5 6} ("Ghoul","Necrophage","Walking Corpse","Soulless") 6} 

                {BOSS_CASE boss_roc 4 Roc (_"Evil Roc") ("Falcon","Elder Falcon") 6}

                {BOSS_CASE boss_mud 4 Mudavenger (_"Mudak") ("Giant Mudcrawler") 6}

                {BOSS_CASE boss_ogre 5 "Great Ogre" (_"Moog the Overterrible") ("Ogre","Young Ogre") 5}

                {BOSS_CASE boss_deathknight 6 "Death Knight" (_"Konrad") ("Death Squire","Bone Knight") 6}

            [/switch]

            {CLEAR_VARIABLE random_placement_x}
            {CLEAR_VARIABLE random_placement_y}
            #{CLEAR_VARIABLE random_placement_locations}
        [/then]
        [/if]
        [/then]
        [/if]
    [/event]
